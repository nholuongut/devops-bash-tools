#!/usr/bin/env bash
#  vim:ts=4:sts=4:sw=4:et
#
set -euo pipefail
[ -n "${DEBUG:-}" ] && set -x
srcdir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

trap 'echo ERROR >&2' exit

cd "$srcdir"

file="DOCKER_STATUS.md"

repolist="$*"

# this leads to confusion as it generates some randomly unexpected output by querying a dockerhub user who happens to have the same name as your local user eg. nholuongut, so force explicit now
#USER="${DOCKER_USER:-${USERNAME:-${USER}}}"
if [ -z "${DOCKER_USER:-}" ] ; then
    echo "\$DOCKER_USER not set!"
    exit 1
fi

if [ -z "$repolist" ]; then
    repolist="$(dockerhub_search.py -n 100 nholuongut | awk '/^nholuongut\/.*[[:space:]]\[OK]/{print $1}' | sort)"
fi

num_repos="$(wc -l <<< "$repolist")"
num_repos="${num_repos// /}"

{
cat <<EOF
# Docker Status Page

generated by \`${0##*/}\` in [nholuongut/DevOps-Bash-tools](https://github.com/nholuongut/DevOps-Bash-tools)

This page relies on shields.io which is slow so a lot of it may not load properly the first time so you may need to do one or more page reloads to get all the badges to load.

EOF
# don't expand `:latest`
# shellcheck disable=SC2016
echo "$num_repos docker repos - "'`:latest`'" tag build status:"
echo
for repo in $repolist; do
    if ! [[ "$repo" =~ / ]]; then
        repo="$DOCKER_USER/$repo"
    fi
    echo "[![Docker Build Status](https://img.shields.io/docker/cloud/build/$repo.svg)](https://hub.docker.com/r/$repo/builds)"
    echo "[![DockerHub Pulls](https://img.shields.io/docker/pulls/$repo.svg)](https://hub.docker.com/r/$repo) -"
    echo "[$repo](https://hub.docker.com/r/$repo)"
    echo
done
} | tee "$file"

trap '' exit
